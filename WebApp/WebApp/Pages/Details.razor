@page "/teamdetail/{teamName}"
<Navbar></Navbar>

<h1 class="page-title">Details</h1>

@if (team != null)
{
    <div>
        <h2>@team.Name</h2>
        <div class="team-details">
            <div class="team-attributes">
                <p>Id: @team.Id</p>
                <p>Location: @team.Location</p>
                <p>Region: @team.Region</p>
                <p>Founders/CEO: @string.Join(", ", team.Founders)</p>
                <p>Players: @string.Join(", ", team.Players)</p>
            </div>
            <div class="team-logo">
                <img src="@team.Url" alt="Team Logo" width="100" height="100" />
            </div>
        </div>
    </div>
    <DeleteButton></DeleteButton>
}
else
{
    <p>Loading team details...</p>
}


@code {
    [Parameter]
    public string TeamName { get; set; }

    private Team team;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await HttpClient.GetAsync($"http://localhost:8888/team/{TeamName}");
            if (response.IsSuccessStatusCode)
            {
                team = await response.Content.ReadFromJsonAsync<Team>();
            }
            else
            {
                Console.WriteLine("An error occurred while retrieving team details. Status Code: " + response.StatusCode);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("An error occurred while retrieving team details: " + ex.Message);
        }
    }
}